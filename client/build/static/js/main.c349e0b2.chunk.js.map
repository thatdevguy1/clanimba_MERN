{"version":3,"sources":["assets/allianceFlag.jpg","components/user/user.js","store/action/actions.js","components/newPost/newPost.js","components/reply/reply.js","components/post/post.js","components/wall/wall.js","components/home/home.js","components/login/login.js","components/callback/callback.js","App.js","serviceWorker.js","store/reducer/reducer.js","index.js","assets/wowIcon.png"],"names":["module","exports","User","icon","this","props","wowIcon","mainStyle","mainIcon","width","height","border","fontSize","setStyle","marginBottom","setFont","fontWeight","className","style","Grid","container","justify","alignItems","Avatar","src","user","React","Component","saveMsg","res","type","result","NewPost","state","msg","componentWillUnmount","handlePost","event","preventDefault","refs","textField","children","value","battletag","charImg","saveReply","opId","handleChange","setState","target","userEle","showIcon","TextField","id","label","margin","variant","onChange","multiline","ref","onClick","connect","dispatch","data","axios","post","then","response","console","log","JSON","stringify","catch","error","put","Reply","Post","replies","replyMsgs","map","reply","userName","posterIcon","whiteSpace","wordWrap","textAlign","guild","Wall","componentDidMount","openSocket","on","action","savePost","findPosts","postList","_id","reverse","get","Home","componentWillMount","saveUser","token","saveResult","Login","href","Callback","setToken","location","search","to","App","uid","tokenTrim","split","auth","sessionStorage","setItem","getItem","path","exact","render","Boolean","window","hostname","match","initialState","reducer","battleTag","filter","e","length","__REDUX_DEVTOOLS_EXTENSION__","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c349e0b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/allianceFlag.62af69d8.jpg\";","import React from 'react';\nimport './user.css';\nimport wowIcon from '../../assets/wowIcon.png';\nimport {Grid, Avatar} from '@material-ui/core';\n\nclass User extends React.Component{\n\n  // componentDidMount = () => {\n  //   console.log(this.props);\n  // }\n\n  // componentWillReceiveProps = (nextProps) => {\n  //   console.log(nextProps);\n  // }\n  \n  \n  render(){\n\n    let icon = this.props.icon ? \"https://render-us.worldofwarcraft.com/character/\" + this.props.icon : wowIcon;\n    let mainStyle = this.props.mainIcon ? { width:\"70px\", height: \"70px\", border:\"solid 6px #f5f5f5\", fontSize: \"18px\"} : {};\n    let setStyle = this.props.mainIcon ? {marginBottom: \"-40px\"} : {};\n    let setFont = this.props.mainIcon ? {fontSize: \"18px\", fontWeight: \"bold\"} : {};\n\n    return (\n      <div className=\"user\" style={setStyle}>\n        {/* <div id=\"userWrap\"> */}\n        {/* className=\"userImg\" */}\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Avatar src={icon} style={mainStyle}/>\n          <p style={setFont}>{this.props.user}</p>\n        </Grid>\n      </div>\n    );\n\n  }\n  \n}\n\nexport default User;\n","import axios from 'axios';\n\nexport const SAVE_USER = \"SAVE_USER\";\nexport const SAVE_MSG = \"SAVE_MSG\";\nexport const SAVE_POSTS = \"SAVE_POSTS\";\n\nexport const saveResult = ( res ) => {\n  return {\n      type: SAVE_USER,\n      result: res\n  };\n}\n\nexport const saveMsg = (res) => {\n  return {\n    type: SAVE_MSG,\n    result: res\n  }\n};\n\nexport const savePosts = (res) => {\n  return{\n    type: SAVE_POSTS,\n    result: res\n  }\n}\n\nexport const findPosts = () => {\n  return dispatch => {\n    axios.get(`/posts`).then( (response) => {\n      // handle success\n      dispatch(savePosts(response));\n    }).catch(function (error) {\n      // handle error SEND BACK TO LOGIN***\n      console.log(error);\n    });\n  };\n};\n\nexport const storeResult = ( res ) => {\n  return dispatch => {\n      axios.get(`/user/${res}`).then( (response) => {\n          // handle success\n          dispatch(saveResult(response));\n        }).catch(function (error) {\n          // handle error SEND BACK TO LOGIN***\n          console.log(error);\n        });\n    };\n};\n\nexport const storeMsg = ( res ) => {\n  return dispatch => {\n    const data = {\n      user: res.user,\n      msg: res.msg,\n      icon: res.icon\n    };\n    axios.post(`/msg`, data).then( (response) => {\n        // handle success\n        console.log(`The result in the ajax call is: ${JSON.stringify(response)}`)\n        dispatch(saveMsg(response));\n      }).catch(function (error) {\n        // handle error SEND BACK TO LOGIN***\n        console.log(error);\n    });\n  };\n};\n\nexport const storeReply = ( res ) => {\n  return dispatch => {\n    const data = {\n      user: res.user,\n      msg: res.msg,\n      icon: res.icon,\n      opId: res.opId\n    };\n    axios.put(`/reply`, data).then( (response) => {\n        // handle success\n        console.log(`The result in the ajax call for REPLY is: ${JSON.stringify(response)}`)\n        dispatch(saveMsg(response));\n      }).catch(function (error) {\n        // handle error SEND BACK TO LOGIN***\n        console.log(error);\n    });\n  };\n};","import React from 'react';\nimport { connect } from 'react-redux'\nimport User from '../user/user';\nimport './newPost.css';\nimport * as actionCreators from '../../store/action/actions';\nimport {TextField} from '@material-ui/core';\nimport openSocket from 'socket.io-client';\n\n\n\nclass NewPost extends React.Component {\n  state = {\n    msg: \"\"\n  };\n  \n  // componentDidMount = () => {\n  //   const socket = openSocket('http://localhost:8080');\n  //   socket.on('posts', data => {\n  //     console.log(\"socket new post reached \" + JSON.stringify(data.post));\n  //     if (data.action === 'create') {\n  //       console.log(\"socket new post in if statement reached\");\n  //       this.props.savePost(data.post);\n  //     } \n  //   });\n  // }\n\n  componentWillUnmount = () => {\n\n  }\n\n  handlePost = (event) => {\n    event.preventDefault();\n\n    this.refs.textField.children[1].children[0].value = \"\";\n    \n    this.props.type === \"normalPost\" ? this.props.saveMsg({\n      user: this.props.battletag,\n      msg: this.state.msg,\n      icon: this.props.charImg\n    }) : this.props.saveReply({\n      user: this.props.battletag,\n      msg: this.state.msg,\n      icon: this.props.charImg,\n      opId: this.props.opId\n    })\n    //send ajax call to post msg\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      msg: event.target.value\n    }, ()=>{\n    });\n  };\n\n  render(){\n    let userEle = this.props.showIcon ? <User user={this.props.battletag} icon={this.props.charImg} mainIcon={true}/> : \"\";\n    return (\n      <div className=\"NewPost\">\n       {userEle} \n       <TextField\n            id=\"outlined-basic\"\n            label={this.props.type === \"normalPost\" ? \"New Post\" : \"New Reply\"}\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={this.handleChange}\n            multiline={true}\n            ref=\"textField\"\n          />\n        {/* <textarea className=\"postText\" onChange={this.handleChange} placeholder=\"Create New Post...\"></textarea> */}\n        <button className=\"submitPost\" onClick={this.handlePost}>POST</button>\n      </div>\n    ); \n  }\n \n}\n\nconst mapStateToProps = state => ({\n  battletag: state.battletag,\n  charImg: state.icon\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveMsg: (result) => dispatch(actionCreators.storeMsg(result)),\n    saveReply: (result) => dispatch(actionCreators.storeReply(result))\n    // savePost: (data) => dispatch({type: 'SAVE_MSG', result: {data}})\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPost);","import React from 'react';\nimport User from '../user/user';\nimport './reply.css';\nimport {Paper} from '@material-ui/core';\n\nclass Reply extends React.Component {\n\n    render() { \n        return (\n            <div className=\"reply\">\n                <div className=\"userWrapper\">\n                    <User user={this.props.user} icon={this.props.icon} /> \n                </div>\n                <div className=\"replyMsg\">{this.props.msg}</div>\n            </div>\n        )\n    }\n}\n \nexport default Reply;","import React from 'react';\nimport User from '../user/user';\nimport NewPost from '../newPost/newPost';\nimport './post.css';\nimport Reply from '../reply/reply';\nimport { connect } from 'react-redux';\nimport wowIcon from '../../assets/wowIcon.png';\nimport {Paper} from '@material-ui/core';\n\nclass Post extends React.Component {\n    \n  \n    render() { \n     \n         let replies = this.props.replyMsgs.map(reply => {\n             console.log(\"replies loop\");\n                return  <Reply user={reply.user} icon={reply.icon} msg={reply.msg}/>\n            })\n        return ( \n            <div className=\"post\">\n                {/* <div className=\"userMsgContainer\">\n                    \n                </div> */}\n                <div className=\"postMsg\">\n                <User user={this.props.userName} icon={this.props.posterIcon} />\n                    <p style={{whiteSpace: 'pre-line', wordWrap: \"break-word\", fontSize:\"18px\", textAlign:\"center\"}}>\n                        {this.props.msg}\n                    </p>\n                    <hr/>\n                    <div className=\"replySection\">\n                    <span style={{whiteSpace: 'pre-line'}}>\n                        {replies}\n                    </span>\n                        <NewPost type=\"replyPost\" opId={this.props.opId} showIcon={false}/>\n                    </div>\n                </div>\n            </div>\n         );\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    battletag: state.battletag,\n    icon: state.icon,\n    guild: state.guild,\n    post: state.post\n});\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     saveUser: (result) => dispatch(actionCreators.storeResult(result))\n//     //saveUser: () => dispatch({type: 'SAVE_USER'})\n//   };\n// };\n\nexport default connect(mapStateToProps)(Post);\n\n\n","import React from 'react';\nimport openSocket from 'socket.io-client';\nimport Post from '../post/post';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../store/action/actions';\nimport './wall.css';\n\nclass Wall extends React.Component{\n\n  componentWillMount(){\n   \n    this.props.findPosts();\n  }\n\n    \n  componentDidMount = () => {\n    const socket = openSocket('https://clanimba.herokuapp.com/');\n    //const socket = openSocket('https://localhost:8080');\n    socket.on('posts', data => {\n      console.log(\"socket new post reached \" + JSON.stringify(data.post));\n      //Switch set up in case of future seperation between create and reply reducer dispatch\n      switch(data.action){\n        case 'create' : console.log(\"socket new post reached\");\n                        this.props.savePost(data.post);\n                        break;\n        case 'reply' : console.log(\"socket reply reached\");\n                       this.props.savePost(data.post);\n                       break;\n      }\n    });\n  }\n\n  render(){\n    let postList = this.props.post.map( post => <Post opId={post._id} msg={post.post} userName={post.user} posterIcon={post.charImg} replyMsgs={post.replies} /> );\n    return (\n      <div className=\"wall\">\n        {postList.reverse()}\n      </div>\n    );\n  };\n};\n\nconst mapStatetoProps = state => ({\n  battletag: state.battletag,\n  post: state.post\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    findPosts: () => dispatch(actionCreators.findPosts()),\n    savePost: (data) => dispatch({type: 'SAVE_MSG', result: {data}})\n    //saveUser: () => dispatch({type: 'SAVE_USER'})\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Wall);\n","import React from 'react';\nimport Wall from '../wall/wall';\nimport NewPost from '../newPost/newPost'\nimport { connect } from 'react-redux';\nimport './home.css';\nimport allianceFlag from '../../assets/allianceFlag.jpg'\nimport wowIcon from '../../assets/wowIcon.png'\nimport * as actionCreators from '../../store/action/actions';\n\nclass Home extends React.Component {\n  state = {};\n\n  componentWillMount = () => { \n    this.props.saveUser(this.props.token);\n  };\n  \n  render(){\n    return (\n      <div className=\"Home\">        \n        <NewPost type=\"normalPost\" showIcon={true}/>\n        <Wall />\n      </div>\n    ); \n  };\n \n};\n\nconst mapStateToProps = state => ({\n    battletag: state.battletag,\n    charImg: state.icon,\n    guild: state.guild\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveUser: (result) => dispatch(actionCreators.storeResult(result))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\nimport './login.css';\n\nclass Login extends React.Component{\n\n  render(){\n    \n    return (\n      <div className=\"login\">\n        <h1>Welcome to clan iMBA</h1>\n        <a href=\"/auth\"><button>Sign in with Blizzard</button></a>\n      </div>\n    );\n\n  }\n  \n}\n\nexport default Login;","import React from 'react';\nimport { Redirect } from \"react-router-dom\";\n\nclass Callback extends React.Component{\n    state={\n    };\n\n    componentDidMount(){\n        console.log(this.props);\n        // console.log(this.props.history.location.search.split(\"=\"));\n        this.props.setToken(this.props.location.search);\n    }\n\n  render(){\n    \n    return (\n      <div className=\"callback\">\n       <h1>Success</h1>\n       <Redirect to=\"/\"/>\n      </div>\n    );\n\n  }\n  \n}\n\nexport default Callback;","import React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from './components/home/home';\nimport Login from './components/login/login';\nimport Callback from './components/callback/callback'\nimport './App.css';\n\nclass App extends React.Component{\n  state = {\n    uid: null,\n    token: \"\"\n  };\n\n  setToken = (token) => {\n    console.log(\"setToken is reached\")\n    //This is the code token, not the oAuth access token. This is used as a unique id for the users current session with his access token from oauth.\n    let tokenTrim = token.split(\"=\");\n    this.setState({\n      auth: true,\n      token: tokenTrim[1]\n    }, ()=>{\n      sessionStorage.setItem(\"auth\", \"true\");\n      sessionStorage.setItem(\"token\", tokenTrim[1]);\n    });\n  };\n\n  componentWillMount(){\n    if(sessionStorage.getItem(\"auth\") === \"true\"){\n      this.setState({\n        auth: true,\n        token: sessionStorage.getItem(\"token\")\n      })\n    }\n  }\n\n  render(){\n    \n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Route path=\"/\" exact render={ this.state.auth == true ? (props) => (<Home {...props} token={this.state.token} />) : (props) => (<Login {...props} /> )} />\n          <Route path=\"/callback\" render={ props => <Callback {...props} setToken={this.setToken} />} />\n        </div>\n      </BrowserRouter>\n    );\n\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../action/actions';\n\nconst initialState = {\n    battletag: '',\n    icon: '',\n    guild: '',\n    token: null,\n    post: []\n};\n\nconst reducer = (state = initialState, action) => {\n\n    switch(action.type) {\n\n        case actionTypes.SAVE_USER:\n            return {\n                ...state, \n                battletag: action.result.data.battleTag,\n                icon: action.result.data.charImg,\n                guild: action.result.data.guild\n            };\n\n        //SAVING POSTS TO DB\n        case actionTypes.SAVE_MSG:\n            if (state.post.filter(e => e._id === action.result.data._id).length > 0) {\n                var post = state.post.map(post => {\n                    if (post._id != action.result.data._id){\n                        return post\n                    } \n                    return action.result.data\n                });\n            } else {\n                var post = [...state.post, action.result.data];\n            } \n            return {\n                ...state,\n                post: post\n            };\n        \n        //GETTING POSTS FROM DB (bad naming for case)\n        case actionTypes.SAVE_POSTS:\n        console.log(\"getting posts reached in reducer\"+ JSON.stringify(action.result.data));\n            return {\n                ...state, \n                post: action.result.data\n            };\n    };\n\n    return state;\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer/reducer';\n\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\n// const store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/wowIcon.7ea61479.png\";"],"sourceRoot":""}